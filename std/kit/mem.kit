include "stdlib.h";

trait Allocator {
    function alloc(n: Size): Ptr[Void];
    function free(ptr: Ptr[Void]): Void;
}

struct SimpleAllocator {
    public var alloc: function (Size) -> Ptr[Void];
    public var free: function (Ptr[Void]) -> Void;
}

implement Allocator for SimpleAllocator {
    public function alloc(n: Size): Ptr[Void] {
        return (this.alloc)(n);
    }

    public function free(ptr: Ptr[Void]) {
        (this.free)(ptr);
    }
}

var simpleMalloc: SimpleAllocator = struct SimpleAllocator {
    alloc: malloc,
    free: free,
};

// will be used as the default Ptr[Void] allocator
var mallocator: Box[Allocator] = simpleMalloc as Box[Allocator];
