/**
 * An Iterable is something, generally a collection, which can be iterated
 * over, e.g. using a for loop. `Iterable`s produce an `Iterator` which
 * contains the state for a single iteration.
 */
trait Iterable[T] {
    public rule iterator() => Iterator[T];
}

/**
 * An `Iterator` stores the context necessary for iterating over a collection
 * of values. Each call to `next` should return the next value, or None.
 */
trait Iterator[T] {
    public rule this.next() => Null[T];
}
