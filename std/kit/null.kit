/**
 * A typesafe nullable pointer.
 */
abstract Null[T]: Raw[T] {
    public rules {
        (this as Raw[T]);
        ((x: T) as Null[T]) => (&x);

        (this.isNull()) => (this as CPtr[T]) == 0;
        (null : Null[T]) => 0;

        (*this): T => if this.isNull() {
            throw NullValueError;
        } else {
            *(this as Raw[T]);
        }

        (this ?? (other: Raw[T])): Null[T] => if this.isNull() {
            other;
        } else {
            this;
        }

        (this ?. $id) => if this.isNull() {
            null;
        } else {
            (*this).$id;
        }
    }
}

/**
 * Thrown when attempting to use a null value.
 */
atom NullValueError;
