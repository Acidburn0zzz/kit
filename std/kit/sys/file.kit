include "stdio.h";

// enum SeekFrom {
//     Beginning = SEEK_SET;
//     Current = SEEK_CUR;
//     End = SEEK_END;
// }

abstract File: Ptr[FILE] {
    public static function read(path: CString): File {
        return fopen(path, "r") as File;
    }

    public static function write(path: CString): File {
        return fopen(path, "w") as File;
    }

    public static function append(path: CString): File {
        return fopen(path, "a") as File;
    }

    public static function update(path: CString): File {
        return fopen(path, "r+") as File;
    }

    // public function seek(offset: Int, from: SeekFrom) {
    //     fseek(this, offset, from);
    // }

    public function close() {
        fclose(this);
    }
}

// implement Reader[CString] for File {
//     public function read(): CString {
//         return fread(this);
//     }
// }

implement Writer[CString] for File {
    public function write(value: CString) {
        fwrite(value, sizeof Char, strlen(value), this);
    }
}
