function f(i: Int): Float {
    return i;
}

function g(func: function (Int) -> Float, i: Int): Float {
    return func(i);
}

function k(func: function (CString, ...) -> Void, s: CString) {
    func(s, 1, 2, 3);
}

function l(s: CString, ...) {
    printf("hello, %s\n", s);
}

struct MyStruct {
    var a: Int;

    public static function h(func: function (function (Int) -> Float, Int) -> Float, func2: function (Int) -> Float, i: Int): Float {
        return func(func2, i);
    }

    public static function j(func, func2: function (Int) -> Float, i: Int): Float {
        return func(func2, i);
    }
}

function main() {
    printf("%.1f\n", MyStruct.h(g, f, 4));
    printf("%.1f\n", MyStruct.j(g, f, 6));
    k(l, "world");
}
